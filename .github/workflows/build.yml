name: Build Backend
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
jobs:
  helm-lint-test:
    runs-on: ubuntu-latest
    container:
      image: quay.io/helmpack/chart-testing:latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint
        run: ct lint --target-branch main --all charts/
      - name: Render Templates
        run: |
          cd charts
          for d in */ ; do
              if [ -f "$d/Chart.yaml" ]; then
                echo "Rendering Helm chart $d to validate defaults..."
                helm template "$d"
              fi
          done

  scriptcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 🦪 ✔ 🧼🧼🧼
        run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "koalaman/shellcheck:v0.8.0" --color=always scripts/*
      - name: 🦪 ✅ 🦇🦇🦇
        run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" bats/bats:1.5.0 scripts/*.bats

  unittest:
    runs-on: ubuntu-latest
    needs:
      - scriptcheck
    steps:
      - uses: actions/checkout@v2
      - name: "🐍 KAS Core Pytest"
        run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "python:3.9" scripts/monotest containers/kas/kas_core
      - name: "🐍 KAS App Pytest"
        run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "python:3.9" scripts/monotest containers/kas/kas_app

  build-base:
    runs-on: ubuntu-latest
    needs:
      - unittest
      - helm-lint-test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: ./containers/python_base
          tags: opentdf/tdf-python-base:3.9
          outputs: type=docker,dest=/tmp/tdf-python-base.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: tdf-python-base
          path: /tmp/tdf-python-base.tar

  build-and-publish:
    needs:
      - build
    uses: opentdf/backend/.github/workflows/publish.yaml@main
    secrets:
      MARS_AWS_ACCESS_KEY_ID: ${{ secrets.MARS_AWS_ACCESS_KEY_ID }}
      MARS_AWS_SECRET_ACCESS_KEY: ${{ secrets.MARS_AWS_SECRET_ACCESS_KEY }}
      MARS_AWS_ROLE_TO_ASSUME: ${{ secrets.MARS_AWS_ROLE_TO_ASSUME }}
